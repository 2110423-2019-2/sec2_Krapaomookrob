version: '3'
services:

  #PHP Service
  app:
    build:
      context: ./laravel
      dockerfile: Dockerfile
    image: digitalocean.com/php
    container_name: application
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    depends_on: 
      - webserver
      - db
      - node
    working_dir: /var/www
    volumes:
      # - ./laravel:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: nginxwebserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./laravel:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./tmp/letsencrypt:/etc/letsencrypt
    depends_on:
      - certbot
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: dbsql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: dbname
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: p455w0rd
      MYSQL_ROOT_PASSWORD: p455w0rd
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  #Nodejs
  node:
    image: "node:latest"
    container_name: node
    working_dir: /var/www
    environment:
      - NODE_ENV=production
    volumes:
      - ./laravel:/var/www
    command: bash -c "npm install && npm run dev"

  #certbot
  certbot:
    image: adferrand/letsencrypt-dns:2.5.3
    container_name: certbot
    restart: unless-stopped
    # env_file:
    #   - ./certbot/build/env
    volumes:
      - ./certbot/dist/domains.conf:/etc/letsencrypt/domains.conf
      - ./tmp/letsencrypt:/etc/letsencrypt
    networks:
      - app-network

    

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local